Test with simple square model..
Input: tensor([1., 2., 3., 4., 5.]) torch.Size([5])
Output: tensor([ 1.,  4.,  9., 16., 25.], grad_fn=<PowBackward0>) torch.Size([5])
Derivatives. 
(tensor([2., 0., 0., 0., 0.]),)
(tensor([0., 4., 0., 0., 0.]),)
(tensor([0., 0., 6., 0., 0.]),)
(tensor([0., 0., 0., 8., 0.]),)
(tensor([ 0.,  0.,  0.,  0., 10.]),)

Test with simple NN..
Test with cpu..
tensor([3.1389, 0.1697], grad_fn=<SqueezeBackward3>)
(tensor([ 0.3823,  0.4150, -0.1171,  0.4593]),)
(tensor([-0.1096,  0.1009, -0.2434,  0.2936]),)

Test with cuda..
tensor([3.1389, 0.1697], device='cuda:0', grad_fn=<SqueezeBackward3>)
(tensor([ 0.3823,  0.4150, -0.1171,  0.4593], device='cuda:0'),)
(tensor([-0.1096,  0.1009, -0.2434,  0.2936], device='cuda:0'),)

Model exported as cuda_cv_4_2.pt
